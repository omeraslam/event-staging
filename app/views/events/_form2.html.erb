<%= form_for [@event] do |f| %>
<%= f.hidden_field :layout_id %>
<%= f.hidden_field :layout_style %>

  <% if @event.errors.any? %>
    <div class="alert error">
      <h2><%= pluralize(@event.errors.count, "error") %> prohibited this event from being saved:</h2>

      <ul>
      <% @event.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>


<div class="owl-carousel">



  <div class="owl-item">

    <div class="container">

        <div class="event-registration-header">
          <h2> What's the event? </h2>
          <p>  Name your event. Is it the Napa Wine Festival or Bob's Birthday Bash? Be bold, and concise.  </p>
        </div>
    
        <div class="input-group input-group-dark">
            <label>Event Title: </label>
          <%= f.text_field :name, :class => 'input-primary', :placeholder => 'ie Denver International Wine Festival' %>
        </div>
        

    </div>   

  </div>



  <div class="theme-selection owl-item">


    <div class="event-registration-header">
        <h2> Select your theme </h2>
        <p> Now, time to give your event some style. </p>
    </div>
    

    <div class="list-inline themes">
        <% @themes.each do |theme| %>
          <a class="theme">
            <%= f.radio_button :layout_style, theme.slug,  :class => 'theme-radio'%>
            <div class="theme-thumb">
              <i class="icon icon-check"> </i>
              <img src="assets/themes/<%= theme.slug %>_thumb.jpg" />
              <div class="thumb-cover"></div>
            </div>  
            <h3> <%= theme.slug %> </h3>
          </a>
        <% end %>  
    </div>  



  </div>


  <div class=" owl-item" >

    <div class="container">

      <div class="event-registration-header">
        <h2>When and where? </h2>
        <p> You're almost done. Just a few more details, please. </p>
      </div> 



    <div class="input-group input-group-dark" id="datepairExample">
      <div class="input-group-inline">
        <label> Date</label>
        <%= f.text_field :date_start, :class => 'date start input-primary', :placeholder => 'Date' %>
        <p> <a id="showEndDates">+ add end date </a> </p>
      </div>

      <div class="input-group-inline">
        <label> Time</label>
        <%= f.text_field :time_start, :class => 'time start input-primary', :placeholder => 'Time' %> 
      </div>
    </div>


    <div class="input-group input-group-dark datePairEndDates" id="datepairExample">
      <div class="input-group-inline">
        <label> End Date</label>
        <%= f.text_field :date_end, :class => 'date end input-primary' , :placeholder => 'End date' %>
      </div>

      <div class="input-group-inline">
        <label> End Time</label>
        <%= f.text_field :time_end, :class => 'time end input-primary' , :placeholder => 'End time' %>
      </div>
    </div>



    <div class="input-group input-group-dark">
      <div class="input-group-inline">
        <label> Location Name</label>
        <input type="text" placeholder="ie Hilton Hotel">
      </div>  
      <div class="input-group-inline">
        <label> Location Address</label>
        <%= f.text_field :location, :class => 'input-primary controls', :id => 'pac-input', :placeholder => 'ie 10 Main Street' %>
      </div>  
    </div> 

    <div style="display:none;" id="map"></div>


    <div class="input-group input-group-dark">
      <label>Description </label>
      <%= f.text_area :description, :class => 'input-primary', :placeholder => 'Example: Why don\'t you and your friends, get with my friends, and we can be friends!' %>
    </div>
   

  </div>

</div>




  <div class="theme-selection owl-item">


    <div class="event-registration-header">
        <h2> <i class='icon icon-loader'></i></h2>
        <p> building your kick ass event website </p>
    </div>


  </div>


</div>


<div class="event-creation-navigation-container">
  <a class="btn-prev event-creation-navigation event-creation-prev " href=""><i class="icon icon-arrow-left"> </i> back</a>
      <%# f.submit "Create Event", :class => 'btn event-creation-navigation event-creation-prev', :id => 'btn-create' %>
  <a class="btn-next event-creation-navigation event-creation-next btn" href="">Next <i class="icon icon-arrow-right"> </i></a>
  <div class="event-creation-help">
       <a href="#">help</a>  <a href="#">cancel</a> 
  </div>
</div>





<script>

var eventCreationStates = [{
    'btnCopy': 'Next: Choose theme',
}, {
    'btnCopy': 'Next: Add details',
}, {
    'btnCopy': 'Finish',
}, {
    'btnCopy': '',
}];

$(document).ready(function() {

    var validator = $("#new_event").validate({
        rules: {
            name: "required",
            "event[name]": {
                required: true
            }
        }
    });
    var owl = $('.owl-carousel');
    owl.on('initialized.owl.carousel', function(e) {
        console.log("total: " + e.item.count)
        console.log("current: " + e.item.index)
        var count = e.item.count;
        var index = e.item.index;
        //update the button copy
        $(".btn-next").html(eventCreationStates[index].btnCopy +
            ' <i class="icon icon-arrow-right"> </i>');
        //animate percetage bar
        $('.percent span').animate({
            'width': ((index + 1) / count) * 100 + '%'
        }, 250);
        $(".theme:eq(0)").addClass("selected").find(".theme-radio").prop('checked', true);        
    });
    owl.owlCarousel({  
        mouseDrag:false,
        touchDrag:false,
        freeDrag:false,
        pullDrag:false,
        "items": 1,
        autoHeight: true
    });
    owl.on('changed.owl.carousel', function(e) {
        console.log("total: " + e.item.count)
        console.log("current: " + e.item.index)
        var count = e.item.count;
        var index = e.item.index;
        //update the button copy
        $(".btn-next").html(eventCreationStates[index].btnCopy +
            ' <i class="icon icon-arrow-right"> </i>');
        //animate percetage bar
        $('.percent span').animate({
            'width': ((index + 1) / count) * 100 + '%'
        }, 250);
        if ((index + 1) == count) {
            $('body').addClass('event-creation-loading');
            setTimeout(function(){
              $('#new_event').submit();
            }, 1000);
            
        }
    });
    $(".btn-next").click(function(e) {
        if (validator.element("#event_name")) {
            owl.trigger('next.owl.carousel');
        }
        e.preventDefault();
    });
    $(".btn-prev").click(function(e) {
        owl.trigger('prev.owl.carousel');
        e.preventDefault();
    });
    $("#showEndDates").click(function() {
        $(this).parent("p").slideUp();
        $(".datePairEndDates").slideDown();
    });
    $(".theme").click(function() {
        $(".theme").removeClass("selected");
        $(this).addClass("selected");
        $(this).find(".theme-radio").prop('checked', true);
    });
});





function initMap() {


     var geocoder, latlng;
     geocoder = new google.maps.Geocoder();

function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
    } else {
        x.innerHTML = "Geolocation is not supported by this browser.";
    }
}
function showPosition(position) {
    var lat = position.coords.latitude;
    var long = position.coords.longitude;
    latlng = new google.maps.LatLng(lat,long);
}

  var map = new google.maps.Map(document.getElementById('map'), {
    center: latlng,
    zoom: 13,
    disableDefaultUI: true,
    scrollwheel: false

  });

  codeAddress();
  function codeAddress() {
    var address = document.getElementById('pac-input').value == '' ? 'Los Angeles, CA' : document.getElementById('pac-input').value;
    geocoder.geocode( {'address': address}, function(results, status) {
      if(status == google.maps.GeocoderStatus.OK) {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
        });
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }


  var input = /** @type {!HTMLInputElement} */(
      document.getElementById('pac-input'));


  var autocomplete = new google.maps.places.Autocomplete(input);
  //autocomplete.bindTo('bounds', map);

  var infowindow = new google.maps.InfoWindow();
  var marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });

  autocomplete.addListener('place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
    }
    marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
    }));
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);

    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
    }

    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
    infowindow.open(map, marker);
  });

  // Sets a listener on a radio button to change the filter type on Places
  // Autocomplete.

}



    </script>

<% end %>





