<!-- <div id="ticket-modal">
	<div class="modal-header modal-header-light">
		<button data-remodal-action="close" class="remodal-close"></button>
		<i class="icon icon-line-email"> </i>
		<h2>New ticket</h2>
		<p>Send the event host a message or a question about the event.</p>
	</div>
	<div class="modal-body">
		<form>
			<div class="input-group">
			   	<label>Title:</label>
				<%= text_field_tag(:name, '', class: 'input input-large', placeholder: '(ie, General Admission)') %>
			</div>

			<div class="input-group">
				<label>Price:</label>
				<%= text_field_tag(:name, '', class: 'input input-large', placeholder: '0') %>
			</div>
			<div class="input-group">
				<%= submit_tag('Create new ticket', class: 'btn btn-primary') %>
			</div>
		</form> 
	</div> 
</div>
 -->
<div id="ticket-modal" class="remodal">
	<div class="modal-header modal-header-light">
		<button data-remodal-action="close" class="remodal-close"></button>
		<h2>Add new ticket</h2>
	</div>
	<div class="modal-body">

		<%= render 'tickets/form' %>

	</div> 
</div>

<script type="text/javascript">
	

	$(document).ready(function() {
		  var validator4 = $("#new_ticket").validate({
    rules: {
      "ticket[title]": {
        required: true
      },
      "ticket[price]": {
        required: true
      },
      "ticket[ticket_limit]": {
        required: true
      },
      "ticket[stop_date]": {
      	required: true
      },
    }, messages : {
      "ticket[title]": 'Please enter a ticket name.',
      "ticket[price]": 'Please enter a ticket price.',
      "ticket[ticket_limit]": 'Please enter a ticket limit.',
      "ticket[stop_date]": 'Please enter an end date.'

    }
  });

var testInt;

testInt = setInterval((function() {
  clearInterval(testInt);
  $('#datepairExample3 .date').datepicker({
    onSelect: function(dateText) {
      $('.date').focusout();
    },
    'format': 'm/d/yyyy',
    'autoclose': true
  });
  return $(' #datepairExample3').datepair({
    parseDate: function(input) {
      return $(input).datepicker('getDate');
    },
    updateDate: function(input, dateObj) {
      return $(input).datepicker('setDate', dateObj);
    }
  });
}), 1000);

// ---
// generated by coffee-script 1.9.2


	$('#datepairExample3').datepair({
		  parseDate: function(input) {
		    return $(input).datepicker('getDate');
		  },
		  updateDate: function(input, dateObj) {
		    return $(input).datepicker('setDate', dateObj);
		  }
		});





  //prevent new paid ticket submission if no account set up 
  $('#new_ticket .btn').on('click', function(e) {

    if($('#ticket_price').val() > 0 && $('.stripe-connect-btn').length > 0) {

      e.preventDefault();
      alert('Please enter a payment account to create paid tickets for this event.')

    } 

  });

  $("#new_ticket").submit(function(e) {


   if($('#ticket_price').val() > 0 && $('.stripe-connect-btn').length > 0) {

        e.preventDefault();

        alert('Before adding a paid ticket, please connect your bank account, so you can get paid!  Head on back to basic ticketing and uncheck "My event is FREE."' );

    } 


});
  
  
	});
</script>