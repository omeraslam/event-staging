
<!--START event navigation-->

<div class="event-header dashboard-container"> 

	<div class="event-meta"> 
	  <% @style_bg = '/assets/' + @event.layout_style.to_s + '.jpg' %>
		
		<!-- <a href="#" class="thumb" style="background-image:url(<%= @style_bg %>);"> 
			<div class="thumb-cover"> </div> 
			<div class="thumb-action"><i class="icon icon-share-window"> </i> </div> 
		</a> -->

		
		<%= link_to user_event_path(@event.user_id, @event), :class => 'thumb', :style => "background-image:url(" + @style_bg + ");",  :target => '_blank'  do %>
			<div class="thumb-cover"> </div> 
			<div class="thumb-action"><i class="icon icon-share-window"> </i> </div> 
		<% end %>


		<h1> 	<%= @event.name  %> </h1>
		<p class="lead">
			<%= @event.date_start.to_date.strftime("%B %d") %>
		</p>
	</div>
	
	<div class="event-status"> 
		<div class="status" style="display: none;">Live </div>
		<div class="status-date" style="display: none;">Event last updated November 1, 2015 </div>
	</div>

</div>



<div class="event-navigation dashboard-container"> 
		<ul>
			<li> <a  class="event-sub-nav-trigger" data-target="0">  attendees </a> </li>		
			<li> <a  class=" event-sub-nav-trigger" data-target="1" >  emails </a> </li>
			<li> <a  class=" event-sub-nav-trigger" data-target="2" >  settings </a> </li>
			<li>  
			

		<%= link_to user_event_path(@event.user_id, @event),  :target => '_blank'  do %>
			website <i class="icon icon-share-window"> </i>
		<% end %>


			</li>			
		</ul>
</div>






<!--start event subnav-->
<div class="event-actions dashboard-container owl-carousel">


	<!--start attendee section-->
	<div data-hash="attendees">
		
		<% if !@attendees.empty? %>
		<table>
		  <thead>
		    <tr>
		      <th>Name</th>
		      <th>Email Address</th>
		      <th>Will attend</th>  
		      <th><a  class="btn btn-small openModal">add attendees </a></th>            
		                
				 </tr>
		  </thead>
		
		  <tbody>
		    <% @attendees.each do |attendee| %>
		      <tr>
		        <td><%= attendee.first_name %> <%= attendee.last_name %></td>
		        <td><%= attendee.email %></td>
		        <% if (attendee.user_id) == current_user.id.to_s %>
		         <td> <%= attendee.attending %></td>
		        <td><%= link_to 'Edit', edit_attendee_path(attendee) %> | <%= link_to 'Delete attendee', attendee, method: :delete, data: { confirm: 'Are you sure?' } %></td>
		         <% end %>
		      </tr>
		    <% end %>
		  </tbody>
		</table>
		
		    <% else %>
		       Oh no! You don't have any attendees yet. <a class="openModal">Let's add some</a> so you can keep track of your guests and send them invitations.   
		    <% end %>
	
	</div>
	
	
	<!--start invite section-->
	<div data-hash="invites">
			
			<section> 
				<h4>Choose email type </h4>
				<ul> 
					<li><a href="#"><i class="icon icon-flag"> </i> <span>Save the Date </span></a></li>	
					<li><a href="#" class=""><i class="icon icon-email"> </i> <span> Invitation</span> </a></li>
				
				</ul>
			</section>
			
			
			<section> 
				<h4>Select recipients </h4>
				<p> 
					You don't have any guests yet. Get on that! <br> <a class="openModal">Let's add some attendees.</a>  
				</p>
				
			</section>
			
			<button class="btn btn-large">Send email </button>

	</div>

		<!--start invite section-->
	<div data-hash="settings">
			
			<section> 
				<h4>Edit event details </h4>

<!-- start event form -->

<%= form_for [current_user, @event] do |f| %>
  <% if @event.errors.any? %>
    <div class="alert error">
      <h2><%= pluralize(@event.errors.count, "error") %> prohibited this event from being saved:</h2>

      <ul>
      <% @event.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>





<div class="event-registration">
    <h5>Title</h5> 
  <div class="form-element"> 
    <%= f.text_field :name, :class => 'input-primary', :placeholder => 'Mikes Birthday, etc' %>
  </div>

<h5>Event Date/Time</h5> 

  <div class="form-element">
<p id="datepairExample">
  <%= f.text_field :date_start, :class => 'date start input-primary', :placeholder => 'start date', :value => ( !@event.date_start.blank? )? @event.date_start.to_date.strftime("%m/%d/%Y"): Date.current().to_date.strftime("%m/%d/%Y") %>
  <%= f.text_field :time_start, :class => 'time start input-primary', :placeholder => 'start time', :value => ( !@event.time_start.blank? )? @event.time_start.to_time.strftime("%l:%M %p"):  Time.current().to_time.strftime("%l:%M %p") %> â€“
  <%= f.text_field :date_end, :class => 'date end input-primary' , :placeholder => 'end date (optional)', :value => (!@event.date_end.blank?)? @event.date_end.to_date.strftime("%m/%d/%Y"): Date.current().to_date.strftime("%m/%d/%Y") %>
  <%= f.text_field :time_end, :class => 'time end input-primary' , :placeholder => 'end time', :value => ( !@event.time_end.blank? )? @event.time_end.to_time.strftime("%l:%M %p"):  Time.current().to_time.strftime("%l:%M %p") %>

</p>




    or <label>
    <%= f.check_box :time_display, :id => 'cb_time' %>TBD</label>
<!-- 
                         <label><input type="checkbox" id="cb_time" value="time_checkbox">TBD</label><br> -->

 
  </div>
<h5>Event Location</h5> 

  <div class="form-element">
    <%= f.text_field :location, :class => 'input-primary controls', :id => 'pac-input', :placeholder => 'Enter a Location' %>



    <div id="map"></div>

     <script>

function initMap() {


     var geocoder, latlng;
     geocoder = new google.maps.Geocoder();

function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
    } else {
        x.innerHTML = "Geolocation is not supported by this browser.";
    }
}
function showPosition(position) {
    var lat = position.coords.latitude;
    var long = position.coords.longitude;
    latlng = new google.maps.LatLng(lat,long);
}

  var map = new google.maps.Map(document.getElementById('map'), {
    center: latlng,
    zoom: 13,
    disableDefaultUI: true,
    scrollwheel: false

  });

  codeAddress();
  function codeAddress() {
    var address = document.getElementById('pac-input').value == '' ? 'Los Angeles, CA' : document.getElementById('pac-input').value;
    geocoder.geocode( {'address': address}, function(results, status) {
      if(status == google.maps.GeocoderStatus.OK) {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
        });
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }


  var input = /** @type {!HTMLInputElement} */(
      document.getElementById('pac-input'));


  var autocomplete = new google.maps.places.Autocomplete(input);
  //autocomplete.bindTo('bounds', map);

  var infowindow = new google.maps.InfoWindow();
  var marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });

  autocomplete.addListener('place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
    }
    marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
    }));
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);

    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
    }

    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
    infowindow.open(map, marker);
  });

  // Sets a listener on a radio button to change the filter type on Places
  // Autocomplete.

}

    </script>



  </div>
  
    <h5>Event Description</h5> 
    
  <div class="form-element">
    <%= f.text_area :description, :class => 'input-primary', :placeholder => 'Example: Why don\'t you and your friends, get with my friends, and we can be friends!' %>

  </div>


</div>



    <%= f.submit "Update Event", :class => 'btn btn-large' %>
 
<% end %>


<!-- event form end -->






				
			</section>
			
			
			


	</div>

</div>	
<!--END event subnav-->


<!--add user modal-->
<div id="add-user-modal">
  <button data-remodal-action="close" class="remodal-close"></button>
  <h2>Add attendees</h2>

  	<p>
  	  Add your attendee email addresses (comma separated or with line breaks). 
  	</p>
  	<textarea rows="4"></textarea>
  	  	
  <button class="btn btn-large" data-remodal-action="confirm" class="remodal-confirm">Add attendees</button>
</div>



<script>

$(document).ready(function(){

	//init the remodal plugin. we have to init using js to avoid owl carousel conflict 
	var inst = $('#add-user-modal').remodal();
	$('.openModal').click(function(){
		inst.open();
	});

	//init the owl carousel plugin  
	var owl = $(".owl-carousel").owlCarousel({
	    items:1,
	    autoHeight : true,
	    URLhashListener:true,
	    startPosition: 'URLHash'   
	});


	switch($('.owl-item.active > div').attr('data-hash')) {
		case 'invites':
		$('.event-sub-nav-trigger[data-target="1"]').addClass('active');
		break;
		default:
		$('.event-sub-nav-trigger[data-target="0"]').addClass('active');
		break;
	}

  
	$('.event-sub-nav-trigger').click(function(){
		
		var dest = parseInt($(this).data('target'));
		$('.event-sub-nav-trigger.active').removeClass('active');
		$(this).addClass('active');
		owl.trigger('to.owl.carousel', [dest])
	
	});

  
});
</script>